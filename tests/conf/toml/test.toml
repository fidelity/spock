# conf file for all TOML tests
### Required or Boolean Base Types ###
bool_p_set = true
# Required Int
int_p = 10
# Required Float
float_p = 1e1
# Required String
string_p = "Spock"
# Required List -- Float
list_p_float = [10.0, 20.0]
# Required List -- Int
list_p_int = [10, 20]
# Required List of Lists
list_list_p_int = [[10, 20], [10, 20]]
# Required List -- Str
list_p_str = ["Spock", "Package"]
# Required List -- Bool
list_p_bool = [true, false]
# Required Tuple -- Float
tuple_p_float = [10.0, 20.0]
# Required Tuple -- Int
tuple_p_int = [10, 20]
# Required Tuple -- Str
tuple_p_str = ["Spock", "Package"]
# Required Tuple -- Bool
tuple_p_bool = [true, false]
# Required Tuple -- mixed
tuple_p_mixed = [5, 11.5]
# Required Choice -- Str type
choice_p_str = 'option_1'
# Required Choice -- Int
choice_p_int = 10
# Required Choice -- Str
choice_p_float = 10.0
# Required List of Choice -- Str
list_choice_p_str = ['option_1']
# Required List of List of Choice -- Str
list_list_choice_p_str = [['option_1'], ['option_1']]
# Required List of Choice -- Int
list_choice_p_int = [10]
# Required List of Choice -- Float
list_choice_p_float = [10.0]
# Nested Configuration
nested = 'NestedStuff'
NestedStuff = {one = 11, two = 'ciao'}
# Nested List configuration
nested_list = 'NestedListStuff'
NestedListStuff = [{one = 10, two = 'hello'}, {one = 20, two = 'bye'}]
# Class Enum
class_enum = 'NestedStuff'
high_config = 'SingleNestedConfig'
[SingleNestedConfig]
    double_nested_config = 'FirstDoubleNestedConfig'
[FirstDoubleNestedConfig]
    h_factor = 0.99
    v_factor = 0.90
# Overrride general definition
[TypeConfig]
    float_p = 12.0
call_me = 'tests.base.attr_configs_test.foo'